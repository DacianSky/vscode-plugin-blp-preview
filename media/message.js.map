{"version":3,"sources":["webpack://blp-preview/webpack/bootstrap","webpack://blp-preview/webpack/runtime/define property getters","webpack://blp-preview/webpack/runtime/hasOwnProperty shorthand","webpack://blp-preview/webpack/runtime/make namespace object","webpack://blp-preview/./src/modelPreview/message.ts"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Message","timeout","requestsMap","constructor","window","addEventListener","async","console","info","e","this","data","requestId","resolve","_trans","blpPath","type","parseInt","Math","random","slice","request","p","Promise","reject","setTimeout","vscode","postMessage","message"],"mappings":"mBACA,IAAIA,EAAsB,CCA1B,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBT,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,mCCCxC,MAAMC,EAEjBC,QAAqB,GACrBC,YAA0C,GAE1CC,cACIC,OAAOC,iBAAiB,WAAWC,UAC/BC,QAAQC,KAAK,UAAWC,GACpBC,KAAKR,YAAYO,EAAEE,KAAKC,aACxBF,KAAKR,YAAYO,EAAEE,KAAKC,WAAWC,QAAQJ,EAAEE,KAAKA,aAC3CD,KAAKR,YAAYO,EAAEE,KAAKC,eAKjC,aACN,aAAaF,KAAKI,OAAO,QAGhB,cAACC,GACV,aAAaL,KAAKI,OAAO,UAAWC,GAGxCD,OAAOE,EAAcL,EAAY,KAAMV,GAAkB,GACrD,MAAMW,EAAYK,UAAUC,KAAKC,SAAW,IAAIC,MAAM,GAAI,IACpDC,EAAmB,CACrBT,YACAC,QAAS,MAEPS,EAAI,IAAIC,SAAQ,CAACV,EAASW,KAC5BH,EAAQR,QAAUA,EACdZ,EAAU,GACVwB,YAAW,YACAf,KAAKR,YAAYU,GACxBY,EAAQ,eAAcR,UAAaL,aAAgBV,OACpDA,MAUX,OAPAS,KAAKR,YAAYU,GAAaS,EAC9Bd,QAAQC,KAAK,UAAWa,GACxBK,OAAOC,YAAY,CACfX,OACAJ,YACAD,SAEGW,GAKflB,OAAOwB,QAAU,IAAI5B,E","file":"media/message.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\nexport interface Request {\r\n    requestId: number;\r\n    resolve: (data: any) => void;\r\n}\r\n\r\nexport default class Message {\r\n\r\n    timeout: Request[] = [];\r\n    requestsMap: { [key: string]: Request } = {};\r\n\r\n    constructor() {\r\n        window.addEventListener('message', async e => {\r\n            console.info('recevie', e);\r\n            if (this.requestsMap[e.data.requestId]) {\r\n                this.requestsMap[e.data.requestId].resolve(e.data.data);\r\n                delete this.requestsMap[e.data.requestId];\r\n            }\r\n        });\r\n    }\r\n\r\n    async load(): Promise<{buf: Buffer, ext: string}> {\r\n        return await this._trans('load');\r\n    }\r\n\r\n    async loadBlp(blpPath: string) {\r\n        return await this._trans('loadBlp', blpPath);\r\n    }\r\n\r\n    _trans(type: string, data: any = null, timeout: number = -1): any {\r\n        const requestId = parseInt((Math.random() + '').slice(2), 10);\r\n        const request: Request = {\r\n            requestId,\r\n            resolve: null,\r\n        };\r\n        const p = new Promise((resolve, reject) => {\r\n            request.resolve = resolve;\r\n            if (timeout > 0) {\r\n                setTimeout(() => {\r\n                    delete this.requestsMap[requestId];\r\n                    reject(`call method ${type} data=${data} timeout ${timeout}`);\r\n                }, timeout);\r\n            }\r\n        });\r\n        this.requestsMap[requestId] = request;\r\n        console.info('request', request);\r\n        vscode.postMessage({\r\n            type,\r\n            requestId,\r\n            data,\r\n        });\r\n        return p;\r\n    }\r\n}\r\n\r\n// @ts-ignore\r\nwindow.message = new Message();\r\n"],"sourceRoot":""}